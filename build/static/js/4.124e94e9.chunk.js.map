{"version":3,"sources":["pages/dashboards/Roles/ItemsTable.js","helpers/index.js","pages/dashboards/Roles/ItemModal.js","pages/dashboards/Roles/Roles.js"],"names":["ItemsTable","_ref","itemsLoading","itemsList","itemsNameMult2","itemsNames","toggleItemEdit","toggleItemDelete","ruleTypes","react_default","a","createElement","className","Spinner","size","color","length","Table","bordered","striped","map","role","roleIndex","key","concat","id","name","dispaly_name","description","dist","onClick","handleItemEdit","handleItemDelete","defaultProps","findItemBy","property","value","index","returnIndex","arguments","undefined","result","i","item","ItemModal","isOpen","itemModalToggle","submitItem","itemsSaving","itemData","isInitialMount","_useState","useState","rules","_useState2","Object","slicedToArray","itemFormData","setFormData","_useState3","ruleType","create","update","delete","view","_useState4","rulesFormData","setRulesFormData","getCheckboxValue","data","rule","type","prop","Error","handleRuleChange","prevState","newRulesState","assign","_findItemBy2","isChecked","toConsumableArray","useEffect","console","log","_findItemBy","setUpRulesFormData","Modal","toggle","ModalHeader","ModalBody","lib","onValidSubmit","stateCopy","formData","objectSpread","FormGroup","row","Label","sm","Col","required","bsSize","placeholder","onChange","event","target","typeIndex","CustomInput","inline","checked","label","Button","disabled","Roles","dispatch","useDispatch","_useSelector","useSelector","state","roles","rolesLoading","rolesList","rolesSaving","rolesFilter","rolesMeta","setInitialMount","itemModalOpen","setItemModalOpen","_useState5","_useState6","setItemData","itemsName","itemsNameMult1","payload","getParams","fetchRoles","Container","fluid","ItemsTable_ItemsTable","swal","title","text","icon","buttons","dangerMode","then","answer","deleteRole","ItemModal_ItemModal","saveRole"],"mappings":"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","file":"static/js/4.124e94e9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n\tSpinner,\n\tTable\n} from 'reactstrap';\n\nimport { Edit2,\tTrash } from 'react-feather';\n\nconst ItemsTable = ({ \n\titemsLoading,\n\titemsList,\n\titemsNames: { itemsNameMult2 },\n\ttoggleItemEdit,\n\ttoggleItemDelete,\n\truleTypes \n}) => {\n\t// =====getters====\n\t// =================\n\tconst handleItemEdit = role => {toggleItemEdit(role)}\n\tconst handleItemDelete = role => {toggleItemDelete(role)}\n\n\treturn (\n\t\t// <Card>\n\t\t<div className=\"mt-3\">\n\t\t\t{itemsLoading ? (\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<span className=\"align-middle\">\n\t\t\t\t\t\t<Spinner size=\"sm\" color=\"primary\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"align-middle preloader-text\">Загрузка {itemsNameMult2}...</span>\n\t\t\t\t</div>\n\t\t\t) : null}\n\n\t\t\t{!itemsLoading && !itemsList.length ? (\n\t\t\t\t<div className=\"text-center preloader-text\">{itemsNameMult2} не обнаружено</div>\n\t\t\t) : null}\n\n\t\t\t{!itemsLoading && itemsList.length ? (\n\t\t\t\t<div className=\"table-wrapper\">\n\t\t\t\t\t<Table bordered size=\"sm\" striped className=\"standard-table centered\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th className=\"id\">ID</th>\n\t\t\t\t\t\t\t\t<th className=\"name\">Название</th>\n\t\t\t\t\t\t\t\t<th>Отображаемое название</th>\n\t\t\t\t\t\t\t\t<th>Описание</th>\n\t\t\t\t\t\t\t\t{/*<th>Права</th>*/}\n\t\t\t\t\t\t\t\t<th>Действия</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{itemsList.map((role, roleIndex) => (\n\t\t\t\t\t\t\t\t<tr key={`role_item-${roleIndex}`}>\n\t\t\t\t\t\t\t\t\t<td>{role.id}</td>\n\t\t\t\t\t\t\t\t\t<td>{role.name}</td>\n\t\t\t\t\t\t\t\t\t<td>{role.dispaly_name}</td>\n\t\t\t\t\t\t\t\t\t<td>{role.description}</td>\n\t\t\t\t\t\t\t\t\t{/*<td>\n\t\t\t\t\t\t\t\t\t\t{role.rules.map((rule, roleInd) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={`rule-${roleInd}`}>{rule.display_name}</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</td>*/}\n\t\t\t\t\t\t\t\t\t<td className=\"table-action\">\n\t\t\t\t\t\t\t\t\t\t<Edit2 className=\"align-middle mr-1 pointer\" size={18}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleItemEdit(role)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Trash className=\"align-middle pointer\" size={18}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleItemDelete(role)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t\t// </Card>\n\t);\n};\n\nItemsTable.defaultProps = {\n\titemsNames: {\n\t\titemsNameMult2: 'Элементы списка'\n\t},\n\titemsLoading: false\n};\n\nItemsTable.propTypes = {\n\titemsNames: PropTypes.shape({\n\t\titemsNameMult2: PropTypes.string\n\t}),\n\titemsLoading: PropTypes.bool,\n\titemsList: PropTypes.array.isRequired,\n\ttoggleItemEdit: PropTypes.func.isRequired,\n\ttoggleItemDelete: PropTypes.func.isRequired\n};\n\nexport { ItemsTable };\n","// import isEmpty from 'lodash.isempty';\n\n/* const isValidImage = (file, size) => {\n\tconst acceptedImageTypes = ['image/gif', 'image/jpeg', 'image/jpg', 'image/png'];\n\n\tlet isFileImage = file && acceptedImageTypes.includes(file['type'])\n\tlet acceptedImageSize = file && file.size < (size || 6291456) //2097152\n\t// console.log(isFileImage, acceptedImageSize)\n\treturn !!isFileImage && !!acceptedImageSize\t\n} */\n\n/* const isValidFile = (file, customSize) => {\n\t// const acceptedImageTypes = ['image/gif', 'image/jpeg', 'image/jpg', 'image/png'];\n\t// console.log(file)\n\tlet size = customSize || 6291456;\n\n\treturn file && file.size <= size \n\t// let isFileImage = file && acceptedImageTypes.includes(file['type'])\n} */\n\nconst isImage = fileObj => {\n\treturn /\\.(gif|jpg|jpeg|tiff|png)$/gim.test(fileObj.path);\n};\n\nconst findItemBy = (property, value, itemsList, returnIndex=false) => {\n\tlet result = null; let index;\n\tif (itemsList.length) {\n\t\tfor (let i = 0; i < itemsList.length; i++) {\n\t\t\tif (itemsList[i][property]) {\n\t\t\t\tif (itemsList[i][property] === value) {\n\t\t\t\t\tresult = itemsList[i];\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn returnIndex ? {item: result, index: index} : result;\n};\n\n/* const getIds = (itemsList, options) => {\n\tlet ids = [];\n\t\n\tif (options && options.string) {\n\t\tfor (let i = 0; i < itemsList.length; i++) {\n\t\t\titemsList[i].id ? ids.push( itemsList[i].id + '') : null;\n\t\t}\n\t\treturn ids;\t\t\n\t}\n\n\tfor (let i = 0; i < itemsList.length; i++) {\n\t\titemsList[i].id ? ids.push( itemsList[i].id ) : null;\n\t}\n\n\treturn ids;\n} */\n\n/* const bs64toFile = (url, filename, mimeType) => {\n  return (fetch(url)\n      .then(function(res){return res.arrayBuffer();})\n      .then(function(buf){return new File([buf], filename, {type:mimeType});})\n  )\n} */\n\n/* const hasRightsTo = (userRole, item) => {\n\tif (item.meta && item.meta.roles && item.meta.roles.length) {\n\t\tif (userRole) {\n\t\t\treturn item.meta.roles.some((role) => {\n\t\t\t\treturn userRole === role\n\t\t\t})          \n\t\t}\n\t}\n\treturn true\n} */\n\n/* const defaultDateTimeFormat = (dateStr) => {\n\tif (dateStr) {\n\t  let arr = dateStr.split(' ');\n\t  let resultDate;\n\n\t  if (arr.length) {\n\t    let date = arr[0], time = arr[1];\n\t    let dateArr = date.split('-');\n\t    let resultDateArr = []\n\n\t    for (let i = dateArr.length - 1 ; i >= 0 ; i--) {\n\t      resultDateArr.push(dateArr[i])\n\t    }\n\n\t    if (resultDateArr.length) {\n\t      resultDate = resultDateArr.join('.')\n\t      resultDate += time ? ' '+time : '';\n\t      return resultDate\n\t    }\n\t  }\n\t  return dateStr\n\t}\n\treturn 'date not set'\n} */\n\nexport { isImage, findItemBy };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { findItemBy } from 'helpers'\n\nimport { \n\tButton,\n\tCol,\n\tCustomInput,\n\tModal,\n\tModalBody,\n\tModalHeader,\n\tFormGroup,\n\tLabel,\n\tSpinner\n} from 'reactstrap';\n\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nconst ItemModal = ({\n\tisOpen,\n\titemModalToggle,\n\titemsNames:{itemsNameMult2},\n\tsubmitItem,\n\truleTypes,\n\titemsSaving,\n\titemData,\n\tisInitialMount\n}) => {\n\tconst initialItemFormData = {\n\t\tid: null,\n\t\tname: '',\n\t\tdescription: '',\n\t\trules: [],\n\t}\n\n\tconst initialRulesFormData = [\n\t\t{ruleType: 1, create:false, update:false, delete:false, view:false },\n\t\t{ruleType: 2, create:false, update:false, delete:false, view:false },\n\t\t{ruleType: 3, create:false, update:false, delete:false, view:false },\n\t\t{ruleType: 4, create:false, update:false, delete:false, view:false },\n\t\t{ruleType: 5, create:false, update:false, delete:false, view:false }\n\t]\n\tconst [itemFormData, setFormData] = useState(initialItemFormData);\n\tconst [rulesFormData, setRulesFormData] = useState(initialRulesFormData);\n\t// const [userData, setUserData] = useState(defaultUserData);\n\n\tconst setUpRulesFormData = data => {\n\t\tlet newRulesState = Object.assign([], rulesFormData)\n\t\tlet rules = Object.assign([], data.rules)\n\n\t\tfor (let i = 0; i < rules.length; i++) {\n\t\t\tlet {item, index} = findItemBy('ruleType', rules[i].ruleType, newRulesState, true);\n\t\t\tif (item) {\n\t\t\t\tnewRulesState[index] = rules[i];\n\t\t\t}\n\t\t}\n\n\t\tsetRulesFormData(newRulesState)\n\t}\n\t\n\tconst getCheckboxValue = data => {\n\t\tlet rule = findItemBy('ruleType', data.type, rulesFormData);\n\t\tif (rule) {\n\t\t\treturn rule[data.prop];\n\t\t}\n\t\tthrow new Error('error in code');\n\t\t// return;\n\t}\n\t// const maxToggle = () => setMaxItems(!maxItemsOpen);\n\n\t// -------Form Models--------\n\tconst handleNameChange = event => {\n\t\tconst value = event.target.value;\n\t\tsetFormData(prevState => {\n\t\t\treturn { ...prevState, name: value }\n\t\t})\n\t};\n\tconst handleDescriptionChange = event => {\n\t\tconst value = event.target.value;\n\t\tsetFormData(prevState => {\n\t\t\treturn { ...prevState, description: value }\n\t\t})\n\t};\n\t\n\tconst handleRuleChange = data => {\n\t\tsetRulesFormData(prevState => {\n\t\t\t// console.log(prevState)\n\t\t\tlet newRulesState = Object.assign([], prevState);\n\t\t\tlet {item, index} = findItemBy('ruleType', data.type, newRulesState, true);\n\t\t\tif (item) {\n\t\t\t\tlet isChecked = item[data.prop];\n\t\t\t\tnewRulesState[index][data.prop] = !isChecked;\n\t\t\t}\n\t\t\treturn [...newRulesState];\n\t\t})\n\t};\n\n\tconst handleSubmit = () => {\n\t\tlet stateCopy = Object.assign({}, itemFormData); \n\t\tlet formData = { ...stateCopy, rules: rulesFormData }\n\t\t// console.log(formData)\n\t\tsubmitItem(formData);\n\t};\n\t/*const handleItemsMetaChange = value => {\n\t\tif (maxItems !== value) {\n\t\t\tchangeItemsMeta({ filterName: 'maxItems', val: value });\n\t\t}\n\t};*/\n\n\t// ===== Watch =======\n\tuseEffect(() => {\n\t\tif (!isInitialMount) {\n\t\t\tconsole.log('Modal Update: ', itemData);\n\t\t\tsetFormData(itemData);\n\t\t\tsetUpRulesFormData(itemData);\n\t\t}\n\t}, [itemData]);\n\n\treturn (\n\t\t<Modal size=\"lg\"\n\t\t  isOpen={isOpen}\n\t\t  toggle={itemModalToggle}>\n\t\t  <ModalHeader>\n\t\t    <span className=\"h2\">Создание/редактирование {itemsNameMult2}</span>\n\t\t  </ModalHeader>\n\t\t  <ModalBody className=\"m-3\">\n\t\t  \t<AvForm onValidSubmit={handleSubmit}>\n        \t<FormGroup row>\n        \t\t<Label sm={3} className=\"text-sm-right uppercase\"><strong>Группа пользователей</strong></Label>\n\t        \t<Col sm={7}>\n\t        \t\t<AvField \n\t        \t\t\tname=\"group_name\"\n\t        \t\t\trequired\n\t        \t\t\tbsSize=\"lg\"\n\t        \t\t\ttype=\"text\"\n\t        \t\t\tplaceholder=\"название группы\"\n\t        \t\t\tvalue={itemFormData.name}\n\t        \t\t\tonChange={handleNameChange}\n\t        \t\t/>\n\t        \t</Col>\n        \t</FormGroup>\n\n\t      \t<FormGroup row>\n\t      \t\t<Label sm={3} className=\"text-sm-right uppercase\"><strong>Описание</strong></Label>\n\t        \t<Col sm={7}>\n\t        \t\t<AvField \n\t        \t\t\tname=\"group_description\"\n\t        \t\t\trequired\n\t        \t\t\tbsSize=\"lg\"\n\t        \t\t\ttype=\"textarea\"\n\t        \t\t\tplaceholder=\"описание группы\"\n\t        \t\t\tvalue={itemFormData.description}\n\t        \t\t\tonChange={handleDescriptionChange}\n\t        \t\t/>\n\t        \t</Col>\n\t      \t</FormGroup>\n\t        {ruleTypes.map((type, typeIndex) => (\n\t          <FormGroup row key={'rule_type-'+type.ruleType}>\n\t            <Label sm={3} className=\"text-sm-right pt-sm-0 uppercase\"><strong>{type.name}</strong></Label>\n\t            <Col sm={9}>\n\t              <CustomInput inline\n\t                type=\"checkbox\"\n\t                id={`create-${type.ruleType}`}\n\t                checked={getCheckboxValue({type:type.ruleType, prop:'create'})}\n\t                onChange={()=>handleRuleChange({prop:'create', type:type.ruleType})}\n\t                label=\"Создание\"/>\n\t              <CustomInput inline\n\t                type=\"checkbox\"\n\t                id={`update-${type.ruleType}`}\n\t                checked={getCheckboxValue({type:type.ruleType, prop:'update'})}\n\t                onChange={()=>handleRuleChange({prop:'update', type:type.ruleType})}\n\t                label=\"Редактирование\"/>\n\t              <CustomInput inline\n\t                type=\"checkbox\"\n\t                id={`delete-${type.ruleType}`}\n\t                checked={getCheckboxValue({type:type.ruleType, prop:'delete'})}\n\t                onChange={()=>handleRuleChange({prop:'delete', type:type.ruleType})}\n\t                label=\"Удаление\"/>\n\t              <CustomInput inline\n\t                type=\"checkbox\"\n\t                id={`view-${type.ruleType}`}\n\t                checked={getCheckboxValue({type:type.ruleType, prop:'view'})}\n\t                onChange={()=>handleRuleChange({prop:'view', type:type.ruleType})}\n\t                label=\"Просмотр\"/>\n\t            </Col>\n\t          </FormGroup>)\n\t        )}\n          <FormGroup row>\n            {/*<Col sm={{ size: 10, offset: 2 }} className=>*/}\n            <Col sm={4} className=\"ml-auto\">\n            \t<Button color=\"gray-400\" onClick={itemModalToggle}>Отменить</Button>\n\n            \t<Button color=\"tertiary\" size=\"lg\" disabled={itemsSaving} type=\"submit\">\n            \t\t{itemsSaving && <Spinner size=\"sm\" color=\"#fff\" />}\n            \t\t{!itemsSaving && <span>Сохранить</span>}\n            \t</Button>\n            </Col>\n          </FormGroup>\n        </AvForm>\n\t\t  </ModalBody>\n\n\t\t  {/*<ModalFooter>\n\t\t    \n\t\t  </ModalFooter>*/}\n\t\t</Modal>\n\t);\n};\n\nItemModal.defaultProps = {\n\titemsNames: { itemsNameMult2: 'Элементов' }\n};\n\nItemModal.propTypes = {\n\titemsNames: PropTypes.shape({\n\t\titemsNameMult2: PropTypes.string\n\t}),\n\tisOpen: PropTypes.bool.isRequired,\n\titemModalToggle: PropTypes.func.isRequired,\n\tsubmitItem: PropTypes.func.isRequired,\n\truleTypes: PropTypes.array.isRequired,\n\titemsSaving: PropTypes.bool.isRequired,\n\titemData: PropTypes.object.isRequired\n};\n\nexport { ItemModal };\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { subspace, namespaced } from 'redux-subspace';\r\n\r\nimport { Container, Button } from 'reactstrap';\r\n\r\nimport { fetchRoles, saveRole, deleteRole } from 'redux/actions/rolesActions';\r\nimport { ItemsTable } from './ItemsTable';\r\nimport { ItemModal } from './ItemModal';\r\nimport swal from 'sweetalert'\r\n// import Loader from \"components/Loader\";\r\n// import isEqual from 'lodash.isequal'\r\n\r\nconst Roles = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { rolesLoading, rolesList, ruleTypes, rolesSaving, rolesFilter, rolesMeta } = useSelector(state => state.roles);\r\n\r\n\t// ---- local State -----\r\n\tconst [isInitialMount, setInitialMount] = useState(true);\r\n\tconst [itemModalOpen, setItemModalOpen] = useState(false);\r\n\r\n\tconst [itemData, setItemData] = useState({});\r\n\r\n\t// --- Constants -----\r\n\tconst itemsNames = {\r\n\t\titemsName: 'Право',\r\n\t\titemsNameMult1: 'Группы пользователей',\r\n\t\titemsNameMult2: 'Групп пользователей'\r\n\t};\r\n\r\n\tconst itemModalToggle = () => setItemModalOpen(!itemModalOpen);\r\n\r\n\t// ----- Methods ---------\r\n\tconst toggleItemEdit = (role) => {\r\n\t\tsetItemData(role)\r\n\t\tsetItemModalOpen(true);\r\n\t};\r\n\r\n\tconst toggleItemDelete = (role) => {\t\t\t\r\n\t\tswal({\r\n\t\t  title: \"Вы уверены?\",\r\n\t\t  text: `Удалить безвозвратно ${role.name}?`,\r\n\t\t  icon: \"warning\",\r\n\t\t  buttons: true,\r\n\t\t  dangerMode: true,\r\n\t\t})\r\n\t\t.then(answer => {\r\n\t\t\tif (answer) { dispatch( deleteRole(role.id) ) };\r\n\t\t});\t\t\r\n\t};\r\n\r\n\t/*const changeItemsMeta = ({ filterName, val }) => {\r\n\t\tconst newMeta = { ...rolesMeta, [filterName]: val };\r\n\t\tdispatch(setRolesMeta(newMeta));\r\n\t};*/\r\n\r\n\tconst saveItem = (data) => {\r\n\t\t// console.log('ok:', userData )\r\n\t\tdispatch(saveRole({ data: data }))\r\n\t\t\t.then(() => setItemModalOpen(false))\r\n\t};\r\n\r\n\t// ===== Watch =======\r\n\tuseEffect(() => {\r\n\t\t// console.log('rolesFilter: ');\r\n\t\tif (isInitialMount) {\r\n\t\t\t// ------ Component Mount -------\r\n\t\t\tif (rolesList.length < 1) {\r\n\t\t\t\tconst payload = { getParams: { ...rolesFilter, ...rolesMeta } };\r\n\t\t\t\tdispatch(fetchRoles(payload));\r\n\t\t\t}\r\n\t\t\tsetInitialMount(false);\r\n\t\t\t// -----------------------------\r\n\t\t} else {\r\n\t\t\t// ------ Component Update -----\r\n\t\t\tconst payload = { getParams: { ...rolesFilter, ...rolesMeta } };\r\n\t\t\tdispatch(fetchRoles(payload));\r\n\t\t\t// -----------------------------\r\n\t\t}\r\n\t}, [rolesFilter, rolesMeta]);\r\n\r\n\t// ===== Component Will Unmount ======\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\t// console.log('will unmount');\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">Настройка прав доступа и управление ролями</h1>\r\n\t\t\t\r\n\t\t\t<Button color=\"tertiary\" size=\"lg\" onClick={()=>setItemModalOpen(true)}>\r\n\t\t\t\t<span>Создать группу пользователей</span>\r\n\t\t\t</Button>\r\n\r\n\t\t\t<ItemsTable \r\n\t\t\t\ttoggleItemEdit={toggleItemEdit}\r\n\t\t\t\ttoggleItemDelete={toggleItemDelete}\r\n\t\t\t\titemsNames={itemsNames}\r\n\t\t\t\titemsLoading={rolesLoading}\r\n\t\t\t\titemsList={rolesList}\r\n\t\t\t\truleTypes={ruleTypes}\r\n\t\t\t/>\r\n\r\n\t\t\t<ItemModal \r\n\t\t\t\tisInitialMount={isInitialMount}\r\n\t\t\t\tisOpen={itemModalOpen}\r\n\t\t\t\titemModalToggle={itemModalToggle}\r\n\t\t\t\titemsNames={itemsNames}\r\n\t\t\t\tsubmitItem={saveItem}\r\n\t\t\t\truleTypes={ruleTypes}\r\n\t\t\t\titemsSaving={rolesSaving}\r\n\t\t\t\titemData={itemData}\r\n\t\t\t/>\r\n\r\n\t\t\t\r\n\r\n\t\t\t{/*<ConfirmModal\r\n\t\t\t\tisOpen={confirmModalOpen}\r\n\t\t\t\tonClose={handleConfirmModalClose}\r\n\t\t\t/>*/}\r\n\r\n\t\t\t{/* <div className=\"\" /> */}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Roles;\r\n"],"sourceRoot":""}