{"version":3,"sources":["pages/dashboards/Users/ItemsTable.js","pages/dashboards/Users/ItemModal.js","pages/dashboards/Users/FilterBar.js","pages/dashboards/Users/Users.js"],"names":["ItemsTable","_ref","itemsLoading","itemsList","itemsNameMult2","itemsNames","toggleItemEdit","toggleItemDelete","userTypesList","react_default","a","createElement","className","Spinner","size","color","length","Table","bordered","striped","map","user","userIndex","key","concat","id","login","last_name","first_name","second_name","role","getUserClient","phone","display_name","isActive","dist","onClick","handleItemEdit","handleItemDelete","defaultProps","ItemModal","isOpen","itemModalToggle","submitItem","itemsSaving","itemData","isInitialMount","rolesList","_useState","useState","type","email","password","role_id","_useState2","Object","slicedToArray","itemFormData","setFormData","handleFieldChange","data","prop","val","prevState","objectSpread","defineProperty","useEffect","console","log","Modal","toggle","ModalHeader","ModalBody","lib","onValidSubmit","formData","assign","Row","Label","sm","Col","required","name","bsSize","placeholder","value","onChange","event","target","e","disabled","roleIx","FormGroup","row","Button","FilterBar","changeItemsFilter","changeItemsMeta","max","currentFilter","isClient","itemsMeta","maxItemsOpen","setMaxItems","handleItemsMetaChange","filterName","xs","md","ButtonDropdown","DropdownToggle","caret","DropdownMenu","right","DropdownItem","active","Users","dispatch","useDispatch","_useSelector","useSelector","state","users","usersLoading","usersList","usersFilter","usersMeta","usersSaving","roles","setInitialMount","_useState3","_useState4","itemModalOpen","setItemModalOpen","_useState5","_useState6","setItemData","itemsName","itemsNameMult1","rolesFilter","rolesMeta","maxItems","payload","getParams","fetchUsers","fetchRoles","setUsers","Container","fluid","FilterBar_FilterBar","_ref2","newMeta","setUsersMeta","newFilters","setUsersFilter","ItemsTable_ItemsTable","swal","title","text","fullName","icon","buttons","dangerMode","then","answer","deleteUser","ItemModal_ItemModal","saveUser"],"mappings":"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","file":"static/js/5.4f5b1f3a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n\t// Card,\n\t// CardHeader,\n\t// CardTitle,\n\tSpinner,\n\tTable\n} from 'reactstrap';\n\nimport { Edit2,\tTrash, Check } from 'react-feather';\n\nconst ItemsTable = ({ \n\titemsLoading,\n\titemsList,\n\titemsNames: { itemsNameMult2 },\n\ttoggleItemEdit,\n\ttoggleItemDelete,\n\tuserTypesList\n}) => {\n\t\n\t// =====getters====\n\t// const getUserClient = user => (user.isClient ? user.company : '');\n\tconst getUserClient = user => (user.role && user.role.id === 1 ? '' : 'да');\n\n\t/* const userRoles = user => {\n\t\tlet roles = [];\n\t\tfor (let i = 0; i < user.roles.length; i++) {\n\t\t\troles.push(user.roles[i].display_name);\n\t\t}\n\t\treturn roles;\n\t\t// user.isAdmin ? 'Администраторы' : 'Пользователи';\n\t} */\n\t// =================\n\tconst handleItemEdit = user => {toggleItemEdit(user)}\n\tconst handleItemDelete = user => {toggleItemDelete(user)}\n\n\treturn (\n\t\t// <Card>\n\t\t<div className=\"mt-3\">\n\t\t\t{itemsLoading ? (\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<span className=\"align-middle\">\n\t\t\t\t\t\t<Spinner size=\"sm\" color=\"primary\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"align-middle preloader-text\">Загрузка {itemsNameMult2}...</span>\n\t\t\t\t</div>\n\t\t\t) : null}\n\n\t\t\t{!itemsLoading && !itemsList.length ? (\n\t\t\t\t<div className=\"text-center preloader-text\">{itemsNameMult2} не обнаружено</div>\n\t\t\t) : null}\n\n\t\t\t{!itemsLoading && itemsList.length ? (\n\t\t\t\t<div className=\"table-wrapper\">\n\t\t\t\t\t<Table bordered size=\"sm\" striped className=\"standard-table centered\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th className=\"id\">ID</th>\n\t\t\t\t\t\t\t\t<th className=\"name\">Логин</th>\n\t\t\t\t\t\t\t\t<th>Фамилия</th>\n\t\t\t\t\t\t\t\t<th>Имя</th>\n\t\t\t\t\t\t\t\t<th>Отчество</th>\n\t\t\t\t\t\t\t\t<th>Клиент</th>\n\t\t\t\t\t\t\t\t<th>Телефон</th>\n\t\t\t\t\t\t\t\t<th>Группа пользователей</th>\n\t\t\t\t\t\t\t\t<th>Статус</th>\n\t\t\t\t\t\t\t\t<th>Действия</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{itemsList.map((user, userIndex) => (\n\t\t\t\t\t\t\t\t<tr key={`user_item-${userIndex}`}>\n\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.login}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.last_name}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.first_name}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.second_name}</td>\n\t\t\t\t\t\t\t\t\t<td>{getUserClient(user)}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.phone}</td>\n\t\t\t\t\t\t\t\t\t<td>{user.role ? user.role.display_name : ''}</td>\n\t\t\t\t\t\t\t\t\t{/*<td>\n\t\t\t\t\t\t\t\t\t\t{user.roles.map((role, roleInd) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={`role-${roleInd}`}>{role.display_name}</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</td>*/}\n\t\t\t\t\t\t\t\t\t<td>{user.isActive && <Check size={20} className=\"text-success\" />}</td>\n\t\t\t\t\t\t\t\t\t<td className=\"table-action\">\n\t\t\t\t\t\t\t\t\t\t<Edit2 className=\"align-middle mr-1 pointer\" size={18}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleItemEdit(user)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Trash className=\"align-middle pointer\" size={18}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleItemDelete(user)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</div>\n\t\t// </Card>\n\t);\n};\n\nItemsTable.defaultProps = {\n\titemsNames: {\n\t\titemsNameMult2: 'Элементы списка'\n\t},\n\titemsLoading: false\n};\n\nItemsTable.propTypes = {\n\titemsNames: PropTypes.shape({\n\t\titemsNameMult2: PropTypes.string\n\t}),\n\titemsLoading: PropTypes.bool,\n\titemsList: PropTypes.array.isRequired\n};\n\nexport { ItemsTable };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import { findItemBy } from 'helpers'\n\nimport { \n\tButton,\n\tCol,\n\tRow,\n\t// CustomInput,\n\tModal,\n\tModalBody,\n\tModalHeader,\n\tFormGroup,\n\tLabel,\n\tSpinner\n} from 'reactstrap';\n\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\n// ========================\nconst ItemModal = ({\n\tisOpen,\n\titemModalToggle,\n\titemsNames:{itemsNameMult2},\n\tsubmitItem,\n\titemsSaving,\n\titemData,\n\tisInitialMount,\n\trolesList,\n\tuserTypesList\n}) => {\n\n/*\tconst userTypesList = [\n\t\t{ id: 1, name: 'Внутренний' },\n\t\t{ id: 2, name: 'Внешний' },\n\t]*/\n\n\tconst initialItemFormData = {\n\t\tid: null,\n\t\ttype: 1,\n\t\tlast_name: '',\n\t\tfirst_name: '',\n\t\tsecond_name: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tlogin: '',\n\t\trole_id: ''\n\t}\n\n\tconst [itemFormData, setFormData] = useState(initialItemFormData);\n\t// const [userData, setUserData] = useState(defaultUserData);\n\n\t\n\t// const maxToggle = () => setMaxItems(!maxItemsOpen);\n\n\t// -------Form Models--------\n\n\tconst handleFieldChange = data => {\n\t\tconst { prop, val } = data;\n\t\tsetFormData( prevState => ({ ...prevState, [prop]: val }) );\n\t};\n\tconst handleTypeFieldChange = event => {\n\t\tconst val = event.target.value;\n\n\t\tsetFormData( prevState => \n\t\t\t({ ...prevState, type: val, role_id: '' }) \n\t\t);\n\t};\t\n\n\tconst handleSubmit = () => {\n\t\tlet formData = Object.assign({}, itemFormData); \n\t\t// let formData = { ...stateCopy, rules: rulesFormData }\n\t\t// console.log(formData)\n\t\tsubmitItem(formData);\n\t};\n\t/*const handleItemsMetaChange = value => {\n\t\tif (maxItems !== value) {\n\t\t\tchangeItemsMeta({ filterName: 'maxItems', val: value });\n\t\t}\n\t};*/\n\n\t// ===== Watch =======\n\tuseEffect(() => {\n\t\tif (!isInitialMount) {\n\t\t\tconst role_id = itemData.role ? itemData.role.id : '';\n\t\t\tconst data = { ...itemData, role_id:role_id, role:null, password: '' }\n\t\t\tconsole.log('Modal Update: ', data);\n\n\t\t\tsetFormData(data);\n\t\t}\n\t}, [itemData]);\n\n\treturn (\n\t\t<Modal size=\"lg\"\n\t\t\tisOpen={isOpen}\n\t\t\ttoggle={itemModalToggle}>\n\t\t\t<ModalHeader>\n\t\t\t\t<span className=\"h2\">Создание/редактирование {itemsNameMult2}</span>\n\t\t\t</ModalHeader>\n\t\t\t<ModalBody className=\"m-3\">\n\t\t\t\t<AvForm onValidSubmit={handleSubmit}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Тип пользователя</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField required\n\t\t\t\t\t\t\t  type=\"select\"\n\t\t\t\t\t\t\t  name=\"user_type\"\n\t\t\t\t\t\t\t  bsSize=\"lg\"\n\t\t\t\t\t\t\t  placeholder=\"Выберите тип\"\n\t\t\t\t\t\t\t  value={itemFormData.type}\n\t\t\t\t\t\t\t  onChange={handleTypeFieldChange}\n\t\t\t\t\t\t\t  // helpMessage=\"Idk, this is an example. Deal with it!\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ userTypesList.map(type => \n\t\t\t\t\t\t\t\t(<option key={'type-'+type.id} value={type.id}>{type.name}</option>)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AvField>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Фамилия</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_last_name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Фамилия\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.last_name}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'last_name', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Имя</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_first_name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Имя\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.first_name}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'first_name', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Отчество</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_second_name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Отчество\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.second_name}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'second_name', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Email</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_email\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Имя\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.email}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'email', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Пароль</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_password\"\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Пароль\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.password}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'password', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Логин</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField \n\t\t\t\t\t\t\t\tname=\"user_login\"\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"логин\"\n\t\t\t\t\t\t\t\tvalue={itemFormData.login}\n\t\t\t\t\t\t\t\tonChange={(e) => {handleFieldChange({prop:'login', val:e.target.value})} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Label sm={3} className=\"text-sm-right uppercase\">Роль</Label>\n\t\t\t\t\t\t<Col sm={7}>\n\t\t\t\t\t\t\t<AvField disabled={!rolesList.length || itemFormData.type !== 1}\n\t\t\t\t\t\t\t  type=\"select\"\n\t\t\t\t\t\t\t  name=\"user_company\"\n\t\t\t\t\t\t\t\tbsSize=\"lg\"\n\t\t\t\t\t\t\t  placeholder=\"Выберите компанию\"\n\t\t\t\t\t\t\t  value={itemFormData.role_id}\n\t\t\t\t\t\t\t  onChange={(e) => {handleFieldChange({prop:'role_id', val:e.target.value})} }\n\t\t\t\t\t\t\t  // helpMessage=\"Idk, this is an example. Deal with it!\"\n\t\t\t\t\t\t\t>\t\n\t\t\t\t\t\t\t\t<option value=\"\" disabled>Выберите роль</option>\n\t\t\t\t\t\t\t\t{ rolesList.map((role, roleIx) =>\n\t\t\t\t\t\t\t\t  (<option key={'role-'+role.id} value={role.id}>{role.name}</option>)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AvField>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<FormGroup row>\n\t\t\t\t\t\t{/*<Col sm={{ size: 10, offset: 2 }} className=>*/}\n\t\t\t\t\t\t<Col sm={10} className=\"d-flex\">\n\t\t\t\t\t\t\t<Button className=\"ml-auto\" color=\"gray-400\" onClick={itemModalToggle}>Отменить</Button>\n\n\t\t\t\t\t\t\t<Button color=\"tertiary\" size=\"lg\" disabled={itemsSaving} type=\"submit\">\n\t\t\t\t\t\t\t\t{itemsSaving && <Spinner size=\"sm\" color=\"#fff\" />}\n\t\t\t\t\t\t\t\t{!itemsSaving && <span>Сохранить</span>}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</AvForm>\n\t\t\t</ModalBody>\n\n\t\t\t{/*<ModalFooter>\n\t\t\t\t\n\t\t\t</ModalFooter>*/}\n\t\t</Modal>\n\t);\n};\n\nItemModal.defaultProps = {\n\titemsNames: { itemsNameMult2: 'Элементов' }\n};\n\nItemModal.propTypes = {\n\titemsNames: PropTypes.shape({\n\t\titemsNameMult2: PropTypes.string\n\t}),\n\tisOpen: PropTypes.bool.isRequired,\n\titemModalToggle: PropTypes.func.isRequired,\n\tsubmitItem: PropTypes.func.isRequired,\n\titemsSaving: PropTypes.bool.isRequired,\n\titemData: PropTypes.object.isRequired,\n\trolesList: PropTypes.array.isRequired\n};\n\nexport { ItemModal };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n\t// Button,\n\t// ButtonGroup,\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tCol,\n\tRow\n} from 'reactstrap';\n\nconst FilterBar = ({ changeItemsFilter, changeItemsMeta, currentFilter: { isClient }, itemsMeta: { max } }) => {\n\tconst [maxItemsOpen, setMaxItems] = useState(false);\n\tconst maxToggle = () => setMaxItems(!maxItemsOpen);\n\n\t/*const handleFilter = value => {\n\t\t// const { name, val } = value;\n\t\t// if (currentFilter[name] !== val) {\n\t\tif (isClient !== value) {\n\t\t\t// const newFilters = { ...currentFilter, [name]: val };\n\t\t\t// const payload = { filterName: 'isClient', val: value };\n\t\t\tchangeItemsFilter({ filterName: 'isClient', val: value });\n\t\t}\n\t};*/\n\n\tconst handleItemsMetaChange = value => {\n\t\tif (max !== value) {\n\t\t\tchangeItemsMeta({ filterName: 'max', val: value });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Row className=\"filterbar user-filterbar\">\n\t\t\t{/*<Col xs=\"12\" md=\"8\">\n\t\t\t\t<ButtonGroup className=\"items-filterbar\">\n\t\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => handleFilter(null)} active={isClient === null}>\n\t\t\t\t\t\tВсе\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => handleFilter('1')} active={isClient === '1'}>\n\t\t\t\t\t\tВнешние\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => handleFilter('0')} active={isClient === '0'}>\n\t\t\t\t\t\tВнутренние\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Col>*/}\n\n\t\t\t<Col xs=\"12\" md=\"4\" className=\"ml-auto d-flex\">\n\t\t\t\t<ButtonDropdown isOpen={maxItemsOpen} toggle={maxToggle} className=\"ml-auto\">\n\t\t\t\t\t<DropdownToggle caret>{max}</DropdownToggle>\n\t\t\t\t\t<DropdownMenu right className=\"maxItemsMenu\">\n\t\t\t\t\t\t<DropdownItem active={max === 10} onClick={() => handleItemsMetaChange(10)}>\n\t\t\t\t\t\t\t10\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t<DropdownItem active={max === 20} onClick={() => handleItemsMetaChange(20)}>\n\t\t\t\t\t\t\t20\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t<DropdownItem active={max === -1} onClick={() => handleItemsMetaChange(-1)}>\n\t\t\t\t\t\t\tВсе\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</ButtonDropdown>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nFilterBar.defaultProps = {\n\tcurrentFilter: { isClient: null },\n\titemsMeta: { max: null }\n};\n\nFilterBar.propTypes = {\n\tcurrentFilter: PropTypes.shape({\n\t\tisClient: PropTypes.string\n\t}),\n\titemsMeta: PropTypes.shape({\n\t\tmax: PropTypes.number\n\t}),\n\tchangeItemsFilter: PropTypes.func.isRequired,\n\tchangeItemsMeta: PropTypes.func.isRequired\n};\n\nexport { FilterBar };\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Container, Button } from 'reactstrap';\r\nimport swal from 'sweetalert'\r\n\r\nimport { fetchUsers, setUsersFilter, setUsersMeta, setUsers, saveUser, deleteUser } from 'redux/actions/usersActions';\r\nimport { fetchRoles } from 'redux/actions/rolesActions';\r\n\r\nimport { ItemsTable } from './ItemsTable';\r\nimport { ItemModal } from './ItemModal';\r\n\r\nimport { FilterBar } from './FilterBar';\r\n\r\n// import Loader from \"components/Loader\";\r\n// import isEqual from 'lodash.isequal'\r\n\r\nconst Users = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst {\r\n\t\tusersLoading,\r\n\t\tusersList,\r\n\t\tusersFilter,\r\n\t\tusersMeta,\r\n\t\tusersSaving,\r\n\t\tuserTypesList\r\n\t} = useSelector(state => state.users);\r\n\tconst { rolesList } = useSelector(state => state.roles);\r\n\t// console.log(usersSaving)\r\n\r\n\t// ---- local State -----\r\n\tconst [isInitialMount, setInitialMount] = useState(true);\r\n\tconst [itemModalOpen, setItemModalOpen] = useState(false);\r\n\tconst [itemData, setItemData] = useState({});\r\n\r\n\tconst itemsNames = {\r\n\t\titemsName: 'Пользователь',\r\n\t\titemsNameMult1: 'Пользователи',\r\n\t\titemsNameMult2: 'Пользователей'\r\n\t};\r\n\tconst rolesFilter = {\r\n\t\tisClient: null,\r\n\t\tisActive: null\r\n\t}\r\n\tconst rolesMeta = {\tmaxItems: -1 }\r\n\r\n\tconst itemModalToggle = () => setItemModalOpen(!itemModalOpen);\r\n\r\n\tconst changeItemsFilter = ({ filterName, val }) => {\r\n\t\t// console.log(filterName)\r\n\t\tconst newFilters = { ...usersFilter, [filterName]: val };\r\n\t\tdispatch(setUsersFilter(newFilters));\r\n\t};\r\n\r\n\tconst changeItemsMeta = ({ filterName, val }) => {\r\n\t\tconst newMeta = { ...usersMeta, [filterName]: val };\r\n\t\tdispatch(setUsersMeta(newMeta));\r\n\t};\r\n\r\n\t// ----- Methods ---------\r\n\tconst toggleItemEdit = (user) => {\r\n\t\tsetItemData(user)\r\n\t\tsetItemModalOpen(true);\r\n\t};\r\n\r\n\tconst toggleItemDelete = (user) => {\r\n\t\tswal({\r\n\t\t  title: \"Вы уверены?\",\r\n\t\t  text: `Удалить безвозвратно ${user.fullName}?`,\r\n\t\t  icon: \"warning\",\r\n\t\t  buttons: true,\r\n\t\t  dangerMode: true,\r\n\t\t})\r\n\t\t.then(answer => {\r\n\t\t\tif (answer) { dispatch( deleteUser(user.id) ) };\r\n\t\t});\t\r\n\t};\r\n\r\n\t/*const changeItemsMeta = ({ filterName, val }) => {\r\n\t\tconst newMeta = { ...rolesMeta, [filterName]: val };\r\n\t\tdispatch(setRolesMeta(newMeta));\r\n\t};*/\r\n\r\n\tconst saveItem = (data) => {\r\n\t\t// console.log('ok:', userData )\r\n\t\tdispatch(saveUser({ data: data }))\r\n\t\t\t.then(() => setItemModalOpen(false))\r\n\t};\r\n\r\n\t// ===== Watch =======\r\n\tuseEffect(() => {\r\n\t\t// console.log('usersFilter: ', isInitialMount);\r\n\r\n\t\tif (isInitialMount) {\r\n\t\t\t// ------ Component Mount -------\r\n\t\t\tif (usersList.length < 1) {\r\n\t\t\t\tconst payload = { getParams: {...usersFilter, ...usersMeta} };\r\n\t\t\t\tdispatch(fetchUsers(payload));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(fetchRoles({ getParams: {...rolesFilter, ...rolesMeta} }));\r\n\t\t\tsetInitialMount(false);\r\n\t\t\t// -----------------------------\r\n\t\t} else {\r\n\t\t\t// ------ Component Update -----\r\n\t\t\tconst payload = { getParams: {...usersFilter, ...usersMeta} };\r\n\t\t\tdispatch(fetchUsers(payload));\r\n\t\t\t// -----------------------------\r\n\t\t}\r\n\t}, [usersFilter, usersMeta]);\r\n\r\n\t// ===== Component Will Unmount ======\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tdispatch(setUsers([]));\r\n\t\t\t// console.log('will unmount');\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">{itemsNames.itemsNameMult1}</h1>\r\n\t\t\t\r\n\t\t\t<Button color=\"tertiary\" size=\"lg\" onClick={()=>setItemModalOpen(true)}>\r\n\t\t\t\t<span>Создать пользователя</span>\r\n\t\t\t</Button>\r\n\t\t\t\r\n\t\t\t<FilterBar\r\n\t\t\t\tchangeItemsMeta={changeItemsMeta}\r\n\t\t\t\tchangeItemsFilter={changeItemsFilter}\r\n\t\t\t\tcurrentFilter={usersFilter}\r\n\t\t\t\titemsMeta={usersMeta}\r\n\t\t\t/>\r\n\r\n\t\t\t<ItemsTable\r\n\t\t\t\ttoggleItemEdit={toggleItemEdit}\r\n\t\t\t\ttoggleItemDelete={toggleItemDelete}\r\n\t\t\t\titemsNames={itemsNames}\r\n\t\t\t\titemsLoading={usersLoading}\r\n\t\t\t\tuserTypesList={userTypesList}\r\n\t\t\t\titemsList={usersList} />\r\n\r\n\t\t\t<ItemModal \r\n\t\t\t\tisInitialMount={isInitialMount}\r\n\t\t\t\tisOpen={itemModalOpen}\r\n\t\t\t\titemModalToggle={itemModalToggle}\r\n\t\t\t\titemsNames={itemsNames}\r\n\t\t\t\tsubmitItem={saveItem}\r\n\t\t\t\titemsSaving={usersSaving}\r\n\t\t\t\titemData={itemData}\r\n\t\t\t\trolesList={rolesList}\r\n\t\t\t\tuserTypesList={userTypesList}\r\n\t\t\t/>\r\n\r\n\t\t\t{/* <div className=\"\" /> */}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}